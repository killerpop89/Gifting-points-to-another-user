import json
import logging
from datetime import datetime

# Assuming you're using Streamlabs Chatbot's Points system.
# This function is executed when a user sends a command to give points to another user.

def give_points_to_user(user, recipient, points_to_give):
    # Get the user's current points.
    user_points = get_user_points(user)
    
    if user_points < points_to_give:
        # If the user doesn't have enough points, notify them.
        return f"Sorry {user}, you don't have enough points to give."

    # Reduce points from the user and give them to the recipient.
    update_user_points(user, user_points - points_to_give)
    recipient_points = get_user_points(recipient)
    update_user_points(recipient, recipient_points + points_to_give)
    
    # Log the transaction for record-keeping.
    log_transaction(user, recipient, points_to_give)

    return f"Successfully gave {points_to_give} points to {recipient}!"

# Dummy function to simulate getting a user's points. 
# In a real implementation, you would use Streamlabs API or the Chatbot's built-in point system.
def get_user_points(username):
    # You should replace this with your points database or Streamlabs API call.
    points_db = {"user1": 100, "user2": 50}  # Example point balances
    return points_db.get(username, 0)

# Dummy function to simulate updating a user's points.
def update_user_points(username, new_points):
    # Here you would make a call to update the user's points in your system (Streamlabs API or database).
    # Example of logging the update:
    logging.info(f"Updated {username}'s points to {new_points}")

# Function to log the transaction
def log_transaction(sender, recipient, points):
    transaction = {
        'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
        'sender': sender,
        'recipient': recipient,
        'points': points
    }
    logging.info(f"Transaction: {json.dumps(transaction)}")

# Example usage:
user = 'user1'         # User who is sending points
recipient = 'user2'    # User who is receiving points
points_to_give = 20    # Points the sender wants to give

message = give_points_to_user(user, recipient, points_to_give)
print(message)
